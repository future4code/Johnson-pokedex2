{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hernan\\\\Desktop\\\\projetos\\\\Johnson-pokedex2\\\\pokedex2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import axios from\"axios\";import{BASE_URL}from\"../constants/urls\";import GlobalStateContext from\"./GlobalStateContext\";var GlobalState=function GlobalState(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pokemonNames=_useState2[0],setPokemonNames=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pokemons=_useState4[0],setPokemons=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),pokedex=_useState6[0],setPokedex=_useState6[1];useEffect(function(){getPokemonNames();},[]);useEffect(function(){var newList=[];pokemonNames.forEach(function(item){axios.get(\"\".concat(BASE_URL,\"/pokemon/\").concat(item.name)).then(function(response){newList.push(response.data);if(newList.length===30){var orderedList=newList.sort(function(a,b){return a.id-b.id;});setPokemons(orderedList);}}).catch(function(error){return console.log(error.message);});});},[pokemonNames]);var getPokemonNames=function getPokemonNames(){axios.get(\"\".concat(BASE_URL,\"/pokemon?limit=30\")).then(function(response){setPokemonNames(response.data.results);}).catch(function(error){return console.log(error.message);});};var data={pokemons:pokemons,setPokemons:setPokemons,pokedex:pokedex,setPokedex:setPokedex};return/*#__PURE__*/React.createElement(GlobalStateContext.Provider,{value:data},props.children);};export default GlobalState;","map":{"version":3,"sources":["C:/Users/Hernan/Desktop/projetos/Johnson-pokedex2/pokedex2/src/global/GlobalState.js"],"names":["React","useEffect","useState","axios","BASE_URL","GlobalStateContext","GlobalState","props","pokemonNames","setPokemonNames","pokemons","setPokemons","pokedex","setPokedex","getPokemonNames","newList","forEach","item","get","name","then","response","push","data","length","orderedList","sort","a","b","id","catch","error","console","log","message","results","children"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,mBAAzB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,cAAwCL,QAAQ,CAAC,EAAD,CAAhD,wCAAOM,YAAP,eAAqBC,eAArB,eACA,eAAgCP,QAAQ,CAAC,EAAD,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAA8BT,QAAQ,CAAC,EAAD,CAAtC,yCAAOU,OAAP,eAAgBC,UAAhB,eAEAZ,SAAS,CAAC,UAAM,CACda,eAAe,GAChB,CAFQ,CAEN,EAFM,CAAT,CAIAb,SAAS,CAAC,UAAM,CACd,GAAMc,CAAAA,OAAO,CAAG,EAAhB,CACAP,YAAY,CAACQ,OAAb,CAAqB,SAACC,IAAD,CAAU,CAC7Bd,KAAK,CACFe,GADH,WACUd,QADV,qBAC8Ba,IAAI,CAACE,IADnC,GAEGC,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClBN,OAAO,CAACO,IAAR,CAAaD,QAAQ,CAACE,IAAtB,EACA,GAAIR,OAAO,CAACS,MAAR,GAAmB,EAAvB,CAA2B,CACzB,GAAMC,CAAAA,WAAW,CAAGV,OAAO,CAACW,IAAR,CAAa,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACzC,MAAOD,CAAAA,CAAC,CAACE,EAAF,CAAOD,CAAC,CAACC,EAAhB,CACD,CAFmB,CAApB,CAGAlB,WAAW,CAACc,WAAD,CAAX,CACD,CACF,CAVH,EAWGK,KAXH,CAWS,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAAX,EAXT,EAYD,CAbD,EAcD,CAhBQ,CAgBN,CAAC1B,YAAD,CAhBM,CAAT,CAkBA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BX,KAAK,CACFe,GADH,WACUd,QADV,uBAEGgB,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClBZ,eAAe,CAACY,QAAQ,CAACE,IAAT,CAAcY,OAAf,CAAf,CACD,CAJH,EAKGL,KALH,CAKS,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAAX,EALT,EAMD,CAPD,CASA,GAAMX,CAAAA,IAAI,CAAG,CACXb,QAAQ,CAARA,QADW,CAEXC,WAAW,CAAXA,WAFW,CAGXC,OAAO,CAAPA,OAHW,CAIXC,UAAU,CAAVA,UAJW,CAAb,CAOA,mBACE,oBAAC,kBAAD,CAAoB,QAApB,EAA6B,KAAK,CAAEU,IAApC,EACGhB,KAAK,CAAC6B,QADT,CADF,CAKD,CAhDD,CAkDA,cAAe9B,CAAAA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../constants/urls\";\nimport GlobalStateContext from \"./GlobalStateContext\";\n\nconst GlobalState = (props) => {\n  const [pokemonNames, setPokemonNames] = useState([]);\n  const [pokemons, setPokemons] = useState([]);\n  const [pokedex, setPokedex] = useState([]);\n\n  useEffect(() => {\n    getPokemonNames();\n  }, []);\n\n  useEffect(() => {\n    const newList = [];\n    pokemonNames.forEach((item) => {\n      axios\n        .get(`${BASE_URL}/pokemon/${item.name}`)\n        .then((response) => {\n          newList.push(response.data);\n          if (newList.length === 30) {\n            const orderedList = newList.sort((a, b) => {\n              return a.id - b.id;\n            });\n            setPokemons(orderedList);\n          } \n        })\n        .catch((error) => console.log(error.message));\n    });\n  }, [pokemonNames]);\n\n  const getPokemonNames = () => {\n    axios\n      .get(`${BASE_URL}/pokemon?limit=30`)\n      .then((response) => {\n        setPokemonNames(response.data.results);\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  const data = {\n    pokemons,\n    setPokemons,\n    pokedex,\n    setPokedex\n  };\n\n  return (\n    <GlobalStateContext.Provider value={data}>\n      {props.children}\n    </GlobalStateContext.Provider>\n  );\n};\n\nexport default GlobalState;\n"]},"metadata":{},"sourceType":"module"}